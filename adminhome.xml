<!DOCTYPE html>
<html>
	<head>
		<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
		<meta charset="utf-8" /> 
		<title>Gamelab Experimenter</title>
		<link rel="stylesheet" href="@FONTURI@" />
		<link rel="stylesheet" href="@HTURI@/adminhome.css" />
		<script src="@HTURI@/script.min.js"></script>
		<script src="@HTURI@/adminhome.min.js"></script>
		<script src="@HTURI@/humanize-duration.min.js"></script>
		<script src="@HTURI@/flotr2.min.js"></script>
	</head>
	<body onload="loadall();">
		<!-- Show this before the login has occurred. -->
		<section id="exprLoading">
			<div>
				<div>
					<h2>
						<i class="fa fa-spinner fa-spin"></i>
						Loading gamelab...
					</h2>
				</div>
			</div>
		</section>
		<!-- Now we know we've been logged in. -->
		<section id="exprLoaded" class="noshow">
			<header>
				<div class="table">
					<div>
						<label for="toggle-nav">
							<input type="checkbox" id="toggle-nav" name="toggle-nav" class="toggler" />
							<nav>
								<label class="only-started" for="toggle-status">
									<i class="fa fa-fw fa-bar-chart"></i> 
									Status
								</label>
								<label class="only-new" for="toggle-status">
									<i class="fa fa-fw fa-bar-chart"></i> 
									Configure
								</label>
								<label class="only-started" for="toggle-games">
									<i class="fa fa-fw fa-table"></i> 
									Games
								</label>
								<label for="toggle-mailaddr">
									<i class="fa fa-fw fa-envelope-o"></i> 
									E-mail
									<i id="checkChangeEmail" class="fa fa-spinner"></i>
								</label>
								<label for="toggle-smtp">
									<i class="fa fa-fw fa-database"></i> 
									SMTP
									<i id="checkSmtpLoad2" class="fa fa-spinner"></i>
								</label>
								<label for="toggle-password">
									<i class="fa fa-fw fa-lock"></i> 
									Password
									<i id="checkChangePass" class="fa fa-spinner"></i>
								</label>
								<label class="only-started" for="toggle-players">
									<i class="fa fa-fw fa-user"></i> 
									Participants
								</label>
								<a href="@ADMINURI@/dologout.html">
									<i class="fa fa-fw fa-sign-out"></i> 
									Logout
								</a>
							</nav>
							<i class="fa fa-navicon"></i>
						</label>
						<h1>gamelab<span class="bigview">control</span><span class="smallview">ctrl</span></h1>
						<span id="exprCountdownGame">
							Next round: <span id="exprCountdown"><i class="fa fa-spinner"></i></span>
						</span>
					</div>
				</div>
			</header>
			<input type="radio" class="toggler" name="view-toggle" id="toggle-games" />
			<article id="seeGameSection">
				<h3>
					Experiment games
				</h3>
				<p>
					These are the games assigned to your experiment.
					When displayed to participants, the participant's player role is always the row player.
					In your experiment, the order of games and the games' rows and columns 
					<strong class="expr-shuffle">is</strong> 
					<strong class="expr-noshuffle">is not</strong> 
					randomised.
				</p>
				<div>
					<ul id="loadGames2" class="table">
						<li><i class="fa fa-spinner"></i></li>
					</ul>
				</div>
			</article>
			<input type="radio" class="toggler" name="view-toggle" id="toggle-mailaddr" />
			<article id="changeMailSection">
				<h3>
					Experimenter e-mail address
				</h3>
				<p>
					Set this address to be your address, as the system (or the system administrator) will mail you if it has
					issues.
					First write your <i class="fa fa-envelope"></i> existing one, then your <i class="fa fa-envelope-o"></i>
					new one (twice, for control).
					Upon success, you'll be logged out and must log in again with the new address.
				</p>
				<p>
					Participants in the experiment <strong>may</strong> see this address if you included it in the
					instructions, so don't assume it's private.
				</p>
				<div class="error noshow" id="changeMailErrSystem">
					<div class="warning">
						<div>
							<div><i class="fa fa-exclamation-circle"></i></div>
							<div>
								Oops!  The system failed.  (Please notify your system administrator.)
							</div>
						</div>
					</div>
				</div>
				<div class="noshow" id="changeMailErrForm">
					<div class="warning">
						<div>
							<div><i class="fa fa-exclamation-circle"></i></div>
							<div>
								Invalid new or existing e-mail address.
							</div>
						</div>
					</div>
				</div>
				<form action="@ADMINURI@/dochangemail.json" method="post" id="changeMail" onsubmit="return(changeMail(this));">
					<fieldset>
						<div class="input">
							<i class="fa fa-fw fa-envelope"></i>
							<input required="required" type="email" name="email1" placeholder="Existing E-mail"/>
						</div>
						<div class="input">
							<i class="fa fa-fw fa-envelope-o"></i>
							<input required="required" type="email" name="email2" placeholder="New E-mail"/>
						</div>
						<div class="input">
							<i class="fa fa-fw fa-envelope-o"></i>
							<input required="required" type="email" name="email3" placeholder="Repeat New E-mail"/>
						</div>
						<div class="input input-submit">
							<i class="fa fa-fw fa-check"></i>
							<input id="changeMailSubmit" type="submit" value="Submit" />
						</div>
					</fieldset>
				</form>
				<p>
					Your configuration configuration is as follows:
				</p>
				<fieldset>
					<div class="input">
						<i class="fa fa-fw fa-envelope"></i>
						<input readonly="readonly" class="expr-admin-input" type="text" />
					</div>
				</fieldset>
			</article>
			<input type="radio" class="toggler" name="view-toggle" id="toggle-smtp" />
			<article id="changeSmtpSection">
				<h3>
					SMTP server
				</h3>
				<p>
					You need to configure an SMTP (<q>e-mail</q>) server to e-mail yourself and your participants.
					If you mess up, you can always fix this information after the game starts and re-try e-mails
					that failed to send.
				</p>
				<p>
					The address <i class="fa fa-envelope"></i> will appear as the <q>From</q> address
					on all system mails.
					Make sure this is real so participants can write to you!
					The server <i class="fa fa-database"></i> is your SMTP server (it must be SSL/TLS).
					It's in the form <q>smtp://the.server.name:port</q>, where the port is usually 25, 465, or 587.
					The username <i class="fa fa-user"></i> and password <i class="fa fa-lock"></i> are used
					to log into your server.
				</p>
				<p>
					<strong>Your password is stored as-is in the database</strong>.
					It's redacted if the database is mailed to you, but still.
				</p>
				<div class="error noshow" id="changeSmtpErrSystem">
					An unexpected error occurred.
				</div>
				<div class="error noshow" id="changeSmtpErrForm">
					Invalid new or existing parameters.
				</div>
				<form action="@ADMINURI@/dochangesmtp.json" method="post" id="changeSmtp" onsubmit="return(changeSmtp(this));">
					<fieldset>
						<div class="input">
							<i class="fa fa-fw fa-envelope"></i>
							<input required="required" type="email" name="email" placeholder="you@example.com"/>
						</div>
						<div class="input">
							<i class="fa fa-fw fa-database"></i>
							<input required="required" type="text" name="server" placeholder="smtp://example.com:587"/>
						</div>
						<div class="input">
							<i class="fa fa-fw fa-user"></i>
							<input required="required" type="text" name="user" placeholder="SMTP User"/>
						</div>
						<div class="input">
							<i class="fa fa-fw fa-lock"></i>
							<input required="required" type="password" name="password" placeholder="SMTP Password"/>
						</div>
						<div class="input input-submit">
							<i class="fa fa-fw fa-check"></i>
							<input id="changeSmtpSubmit" type="submit" value="Submit" />
						</div>
					</fieldset>
				</form>
				<div id="checkSmtpResults" class="noshow">
					<p>
						The following is your submitted configuration.
						You can test the configuration by e-mailing yourself (<a class="expr-admin expr-admin-link"></a>) a
						test message.
					</p>
					<div id="testSmtpResults" class="canclose noshow">
						<a href="#" class="close" onclick="doHideNode(this.parentNode); return false;">
							<span class="fa-stack fa-lg">
								<i class="fa fa-circle fa-stack-2x"></i>
								<i class="fa fa-times fa-stack-1x fa-inverse"></i>
							</span>
						</a>
						<p>
							A test e-mail has been sent to <span class="expr-admin"></span>.
							If you do not receive it in a little while, please fix your mail settings.
						</p>
					</div>
					<fieldset>
						<div class="input">
							<i class="fa fa-fw fa-database"></i>
							<input readonly="readonly" id="checkSmtpResultsServer" type="text" />
						</div>
						<div class="input">
							<i class="fa fa-fw fa-user"></i>
							<input readonly="readonly" id="checkSmtpResultsUser" type="text" />
						</div>
						<div class="input">
							<i class="fa fa-fw fa-envelope"></i>
							<input readonly="readonly" id="checkSmtpResultsFrom" type="text" />
						</div>
						<div class="input input-submit" id="testSmtpBtn">
							<i class="fa fa-send"></i>
							<button type="button" id="checkSmtpButton" onclick="testSmtp();">Send test</button>
						</div>
						<div class="input input-submit noshow" id="testSmtpPBtn">
							<i class="fa fa-spinner"></i>
							<button type="button">Sending...</button>
						</div>
					</fieldset>
				</div>
			</article>
			<!-- The "see player" section for started experiments. -->
			<input type="radio" class="toggler" name="view-toggle" id="toggle-players" />
			<article id="seePlayerSection">
				<h3>
					Experiment participants
				</h3>
				<div>
					Participants in your experiment.
					Click on a participant to see their status.
					Enable or disable a participant by flipping the toggle icon.
					Participants may be in the <i class="fa fa-bars"></i> player row role or <i class="fa fa-columns"></i>
					column role.
					However, they may also be in the <i class="fa fa-spinner"></i> lobby, in which case they are not
					yet assigned a role.
					Participants also may be <i class="fa fa-thumb-tack"></i> captive or
					<i class="fa fa-amazon"></i> Mechanical Turk workers.
					(If workers have a <i class="fa fa-check"></i>, they can receive their bonus.)
				</div>
				<div>
					<ul id="loadPlayers" class="table">
						<li><i class="fa fa-spinner"></i></li>
					</ul>
				</div>
				<div id="playerInfo" class="canclose noshow">
					<a href="#" class="close" onclick="doHideNode(this.parentNode); return false;">
						<span class="fa-stack fa-lg">
							<i class="fa fa-circle fa-stack-2x"></i>
							<i class="fa fa-times fa-stack-1x fa-inverse"></i>
						</span>
					</a>
					<p>
						<span id="playerInfoEmail"></span>: 
						<span id="playerInfoStatus"></span>, 
						<span id="playerInfoEnabled"></span>
						(joined round <span id="playerInfoJoined"></span>, answered <span id="playerInfoAnswer"></span> questions)
					</p>
					<form action="@ADMINURI@/doresetpasswords.json" method="post" onsubmit="return(resetPass(this));">
						<input type="hidden" id="playerInfoId" name="pid" />
						<fieldset>
							<div class="input input-submit">
								<i class="fa fa-send"></i>
								<input type="submit" id="resetPasswordButton" value="Reset Password" />
							</div>
						</fieldset>
					</form>
				</div>
				<p>
					Reset all participants' passwords by clicking the button: this will set each participant's password to a
					random value and mark him or her as having a new password.
					If you choose to resend, you'll send passwords to participants with new or failed passwords (those that
					the system was unable to mail out earlier due to a failed SMTP server).
				</p>
				<div class="buttons">
					<div>
						<div class="input input-submit">
							<i class="fa fa-refresh"></i>
							<button type="button" id="resetPasswordsButton" onclick="resetPasswords();">Reset</button>
						</div>
					</div>
					<div>
						<div class="input input-submit">
							<i class="fa fa-send"></i>
							<button type="button" id="recheckSmtpButton" onclick="reTestSmtp();">Resend</button>
						</div>
					</div>
				</div>
				<p>
					Add participants to the game using this form.
					Participants consist of e-mail addresses separated by white-space (newlines, tabs, spaces, whatever).
					When you're finished adding all participants, you must reconfigure.
				</p>
				<form action="@ADMINURI@/doaddplayers.json" method="post" id="addPlayers" onsubmit="return(addPlayers(this));">
					<fieldset>
						<div class="input">
							<i class="fa fa-fw fa-users"></i>
							<textarea name="players" placeholder="Space-separated participant e-mail addresses..."></textarea>
						</div>
						<div class="input input-submit">
							<i class="fa fa-fw fa-check"></i>
							<input id="addPlayersSubmit" type="submit" value="Submit" />
						</div>
					</fieldset>
					<input type="hidden" id="autoadd3" name="autoadd" value="0" />
				</form>
				<p>
					If you set the <q>Allow Captive Participants</q> toggle, then participants may add themselves.
					Captive participants will not be e-mailed when the experiment is started, nor will they be remembered
					when the experiment is reset.
				</p>
				<form action="@ADMINURI@/doaddplayers.json" method="post" id="addPlayers2" onsubmit="return(addPlayers2(this));">
					<fieldset>
						<div class="input input-check">
							<i onclick="toggler('autoadd2', 'autoadd2Toggle');" id="autoadd2Toggle" class="fa fa-fw fa-toggle-off"></i>
							<span onclick="toggler('autoadd2', 'autoadd2Toggle');">Allow Captive Participants</span>
						</div>
						<div class="input input-submit">
							<i class="fa fa-fw fa-check"></i>
							<input id="addPlayersSubmit2" type="submit" value="Submit" />
						</div>
						<input type="hidden" id="autoadd2" name="autoadd" value="0" />
					</fieldset>
				</form>
				<p id="captiveGame2">
					<strong>Note</strong>: you have opted for a captive experiment.
					To enter the captive portal, your participants will need to access <a
						href="@HTURI@/playerautoadd.html">@HTURI@/playerautoadd.html</a> in order to log in.
				</p>
			</article>
			<input type="radio" class="toggler" name="view-toggle" id="toggle-password" />
			<article id="changePassSection">
				<h3>
					Password
				</h3>
				<p>
					Set your password (at least one character) here.
					You should do this when you first use the system, as the default is too easy.
					It's up to you to make sure your password is secure.
					You will be logged out after doing so.
				</p>
				<div class="noshow" id="changePassErrSystem">
					<div class="warning">
						<div>
							<div><i class="fa fa-exclamation-circle"></i></div>
							<div>
								Oops!  The system failed.
								Please let your system administrator know.
							</div>
						</div>
					</div>
				</div>
				<div class="noshow" id="changePassErrForm">
					<div class="warning">
						<div>
							<div><i class="fa fa-exclamation-circle"></i></div>
							<div>
								Invalid new or existing password.
							</div>
						</div>
					</div>
				</div>
				<form action="@ADMINURI@/dochangepass.json" method="post" id="changePass" onsubmit="return(changePass(this));">
					<fieldset>
						<div class="input">
							<i class="fa fa-fw fa-lock"></i>
							<input required="required" type="password" name="password1" placeholder="Existing Password"/>
						</div>
						<div class="input">
							<i class="fa fa-fw fa-lock"></i>
							<input required="required" type="password" name="password2" placeholder="New Password"/>
						</div>
						<div class="input">
							<i class="fa fa-fw fa-lock"></i>
							<input required="required" type="password" name="password3" placeholder="Repeat New Password"/>
						</div>
						<div class="input input-submit">
							<i class="fa fa-fw fa-check"></i>
							<input id="changePassSubmit" type="submit" value="Submit" />
						</div>
					</fieldset>
				</form>
			</article>
			<input type="radio" class="toggler" name="view-toggle" id="toggle-status" checked="checked" />
			<section>
				<article class="top" id="statusGraphs">
					<div class="statusgraph" id="statusExprGraph"></div>
					<div class="statusgraph" id="playerExprGraph"></div>
				</article>
				<article>
					<div class="top" id="statusExprLoading">
						<i class="fa fa-spinner fa-spin"></i>
						Loading status...
					</div>
					<section id="statusExprLoaded">
						<p>
							Your experiment has <span id="statusExprPPmax"></span> rounds per participant, with each round taking
							<span id="statusExprMins"></span>.
							<span id="statusExprRoundpcting">
								If each player role has at least <span id="statusExprRoundpct"></span>% plays, the round
								will advance (with <span id="statusExprRoundmin"></span> of grace time).
							</span>
						</p>
						<div id="mturkerrbox">
							<div class="warning">
								<div>
									<div><i class="fa fa-exclamation-circle"></i></div>
									<div>
										Your Mechanical Turk HIT request failed.
										Error code: <q id="awserror"></q>.
									</div>
								</div>
							</div>
						</div>
						<div id="mturkbox">
							<div class="canclose">
								<a href="#" class="close" onclick="doHideNode(this.parentNode); return false;">
									<span class="fa-stack fa-lg">
										<i class="fa fa-circle fa-stack-2x"></i>
										<i class="fa fa-times fa-stack-1x fa-inverse"></i>
									</span>
								</a>
								<div>
									Your Mechanical Turk HIT request (AWS access key <code id="awsaccesskey">asdf</code>) is still
									being processed.  
									Please refresh this window to see the results.
								</div>
							</div>
						</div>
						<p id="mturkokbox">
							This is a Mechanical Turk experiment with HIT identifier
							<code id="hitid"></code> in
							<span id="mturksandbox">sandbox</span>
							<span id="mturknosandbox">production (non-sandbox)</span> mode.
						</p>
						<p id="statusExprHasLobby">
							Participants waiting in the lobby: <span id="statusExprLobbysize"></span>.
						</p>
						<div id="statusExprProg">
							<div class="statuslistbox" id="statusHighestBox">
								<div class="statuslistcaption">Last Round Highest Earners (<a href="@ADMINURI@/dogethighest.csv">CSV</a>)</div>
								<ul class="statuslist" id="statusHighest"></ul>
							</div>
							<div id="statusHighestNoBox" class="noshow">
								<div class="warning">
									<div>
										<div><i class="fa fa-exclamation-circle"></i></div>
										<div>
											There are no payoffs yet to rank.
										</div>
									</div>
								</div>
							</div>
							<div class="table">
								<div>
									<div class="table-left-head">
										Round <span id="statusExprPRound"></span>/<span id="statusExprPMax"></span> 
									</div>
									<div><progress max="1.0" id="statusExprPBar"></progress></div>
								</div>
								<div>
									<div class="table-left-head">
										Row plays 
										<span id="statusExprFrow"></span>/<span id="statusExprFrowMax"></span>
									</div>
									<div><progress max="1.0" id="statusExprFrowPct"></progress></div>
								</div>
								<div>
									<div class="table-left-head">
										Column plays
										<span id="statusExprFcol"></span>/<span id="statusExprFcolMax"></span>
									</div>
									<div><progress max="1.0" id="statusExprFcolPct"></progress></div>
								</div>
							</div>
							<div id="noplayers" class="noshow">
								<div class="warning">
									<div>
										<div><i class="fa fa-exclamation-circle"></i></div>
										<div>
											There were zero participants in one of the player roles: no payoffs could be
											computed in the last round.
										</div>
									</div>
								</div>
							</div>
						</div>
						<p id="statusMailer">
							The mailer is <i>running</i>: process ID <span id="statusMailerPid"></span>
							(process is <span id="statusMailerPidOk">ok</span><i id="statusMailerPidBad">zombied</i>).
						</p>
						<div id="statusExprWaiting">
							<div class="table">
								<div>
									<div class="table-left-head">
										Round <i>pre-game</i>
									</div>
									<div><progress></progress></div>
								</div>
							</div>
						</div>
						<div id="statusExprFinished">
							<div class="table">
								<div>
									<div class="table-left-head">
										Round <i>finished</i>
									</div>
									<div><progress max="1.0" value="1.0"></progress></div>
								</div>
							</div>
							<div id="statusNoHighestBox2">
								<div class="warning">
									<div>
										<div><i class="fa fa-exclamation-circle"></i></div>
										<div>
											No players have played: no winnings to disburse.
										</div>
									</div>
								</div>
							</div>
							<div class="statuslistbox" id="statusHighestBox2">
								<div class="statuslistcaption">Last Round Highest Earners (<a href="@ADMINURI@/dogethighest.csv">CSV</a>)</div>
								<ul class="statuslist" id="statusHighest2"></ul>
								<div id="mturkbonusesButton">
									<div id="mturkbonusbtn">
										<div class="input input-submit">
											<i class="fa fa-fw fa-amazon"></i>
											<button type="button" onclick="mturkBonuses();">Grant MTurk Bonuses</button>
										</div>
									</div>
									<div class="noshow" id="mturkbonuspbtn">
										<div class="input input-submit">
											<i class="fa fa-fw fa-amazon"></i>
											<button type="button">Granting...</button>
										</div>
									</div>
								</div>
							</div>
							<div class="statuslistbox" id="statusExprFinishedWinnersBox">
								<div class="statuslistcaption">Lottery Winner(s)</div>
								<ul class="statuslist" id="statusExprFinishedWinners"></ul>
							</div>
							<div id="statusExprFinishedWin">
								<p>
									You may compute lottery winners by entering <i class="fa fa-cubes"></i> a numeric random seed
									used to pick winners and <i class="fa fa-trophy"></i> the number of winners to choose.
								</p>
								<div class="noshow" id="statusExprFinishedWinError">
									<div class="warning">
										<div>
											<div><i class="fa fa-exclamation-circle"></i></div>
											<div>
												Uh-oh: the experiment has zero tickets from which to
												select a winner!
											</div>
										</div>
									</div>
								</div>
								<div class="error noshow" id="statusExprFinishedWinForm">
									Malformed input: try again.
								</div>
								<form action="@ADMINURI@/dowinners.json" method="post" onsubmit="return(sendWinners(this));">
									<fieldset>
										<div class="input">
											<i class="fa fa-fw fa-cubes"></i>
											<input type="text" name="winseed" placeholder="Random Seed" required="required" />
										</div>
										<div class="input">
											<i class="fa fa-fw fa-users"></i>
											<input type="number" min="1" name="winners" value="1" required="required" />
										</div>
										<div class="input input-submit">
											<i class="fa fa-fw fa-trophy"></i>
											<input type="submit" id="winnersButton" value="Compute Winners" />
										</div>
									</fieldset>
								</form>
							</div>
						</div>
					</section>
					<section id="rolls">
						<section id="exprControl">
							<h3>
								Experiment control
							</h3>
							<p>
								Control the progress of your experiment here.  <strong>Warning</strong>: this may affect the
								state of your experiment, so be careful!  To perform any action, first
								<span id="wipeExprCheckboxBox">
									<input id="wipeExprCheckbox" type="checkbox" onclick="checkWipeButton(this);" />
									<label for="wipeExprCheckbox">verify</label>
								</span>
								that you're serious about doing this.
							</p>
							<p>
								Backing up involves creating a redacted copy of the database on disc.  If e-mail has been
								configured, the back-up is then e-mailed to the experimenter.
							</p>
							<fieldset>
								<div class="input input-submit">
									<i class="fa fa-fw fa-database"></i>
									<button type="button" id="backupButton" onclick="backup();" disabled="disabled">Backup Experiment</button>
								</div>
							</fieldset>
							<p>
								When you reset, the experiment is backed-up, conditionally e-mailed, then its data wiped (though
								some components, such as the games, remain).  
								To hard-reset is the same as resetting, but the experiment is neither backed up nor e-mailed.
							</p>
							<div class="buttons">
								<div>
									<div class="input input-submit">
										<i class="fa fa-fw fa-recycle"></i>
										<button type="button" id="wipeExprButton" onclick="wipeExpr();" disabled="disabled">Reset</button>
									</div>
								</div>
								<div>
									<div class="input input-submit">
										<i class="fa fa-fw fa-refresh"></i>
										<button type="button" id="wipeCleanExprButton" onclick="wipeCleanExpr();" disabled="disabled">Hard-reset</button>
									</div>
								</div>
							</div>
							<p>
								Lastly, you may advance the current round of your experiment or advance to the last round,
								effectively ending the experiment.  (The current round may not be the round you're
								reading&#8212;refresh this page to double-check.)
							</p>
							<div class="buttons">
								<div>
									<div class="input input-submit">
										<i class="fa fa-fw fa-arrow-circle-o-right"></i>
										<button type="button" id="advanceButton" onclick="advanceRound();" disabled="disabled">Advance Round</button>
									</div>
								</div>
								<div>
									<div class="input input-submit">
										<i class="fa fa-fw fa-arrow-circle-o-right"></i>
										<button type="button" id="advanceEndButton" onclick="advanceEndRound();" disabled="disabled">Advance To Last</button>
									</div>
								</div>
							</div>
							<p>
								You can also fetch a copy of the <a href="@ADMINURI@/dogethistory.json">history JSON</a> or the
								source for the current version of <span class="nm">gamelab</span>, version <a
									href="http://www.kcons.eu/gamelab/snapshots/gamelab-@VERSION@.tgz">@VERSION@</a>.
							</p>
							<div id="wipeExprResults" class="noshow">
								<div class="warning">
									<div>
										<div><i class="fa fa-exclamation-circle"></i></div>
										<div>
											The database is being backed up and wiped.
											Please wait a little bit, then reload.
										</div>
									</div>
								</div>
							</div>
						</section>
						<section id="addGameSection">
							<h3>
								1. Experiment games
								<i id="checkGameLoad2" class="fa fa-spinner"></i>
							</h3>
							<p>
								To run an experiment, you'll need at least normal-form game.
								The following are your games.
								To delete a game, click the <i class="fa fa-remove"></i> symbol alongside.
							</p>
							<div>
								<ul id="loadGames" class="table">
									<li><i class="fa fa-spinner"></i></li>
								</ul>
							</div>
							<p>
								You may add games by specifying dimensions (rows, then columns), a name (shown
								only to you) and payoffs.
								Payoffs follow the usual top-left to bottom-right order, one payoff per player
								role (row player first).
							</p>
							<div class="error noshow" id="addGameErrSystem">
								An unexpected system error occurred.
							</div>
							<div class="error noshow" id="addGameErrForm">
								Invalid game payoffs, name, or strategy count.
							</div>
							<div class="error noshow" id="addGameErrState">
								Experiment already started!
							</div>
							<form action="@ADMINURI@/doaddgame.json" method="post" id="addGame" onsubmit="return(addGame(this));">
								<fieldset>
									<div class="input">
										<i class="fa fa-fw fa-bars"></i>
										<input required="required" type="number" min="2" step="1" name="p1" value="2"/>
									</div>
									<div class="input">
										<i class="fa fa-fw fa-columns"></i>
										<input required="required" type="number" min="2" step="1" name="p2" value="2"/>
									</div>
									<div class="input">
										<i class="fa fa-fw"></i>
										<input required="required" type="text" name="name" placeholder="Game Name"/>
									</div>
									<div class="input">
										<i class="fa fa-fw"></i>
										<input required="required" type="text" name="payoffs" placeholder="Space-separated values (top-left to bottom-right)"/>
									</div>
									<div class="input input-submit">
										<i class="fa fa-fw fa-check"></i>
										<input id="addGameSubmit" type="submit" value="Add game" />
									</div>
								</fieldset>
							</form>
						</section>
						<section id="addPlayerSection">
							<h3>
								2. Experiment participants
							</h3>
							<p>
								Participants in your experiment.
								To delete a participant, just click the <i class="fa fa-remove"></i> symbol alongside.
								Participants marked with <i class="fa fa-thumb-tack"></i> are captive.
								You don't need any participants to start&#8212;you can add them after starting.
							</p>
							<div>
								<ul id="loadNewPlayers" class="table">
									<li><i class="fa fa-spinner"></i></li>
								</ul>
							</div>
							<section class="advanced" id="players-mail">
								<div>
									<i class="fa fa-fw fa-chevron-circle-down"></i>
									<a href="#" onclick="document.getElementById('players-mail').className='advanced showadv'; return false;">
										E-mail participant configuration
									</a>
								</div>
								<p>
									<i class="fa fa-fw fa-chevron-circle-up"></i>
									<a href="#" onclick="document.getElementById('players-mail').className='advanced'; return false;">
										E-mail participant configuration
									</a>
								</p>
								<p>
									Add participants to the game using this form.
									Participants consist of e-mail addresses separated by white-space (newlines, tabs, spaces, whatever).
								</p>
								<form action="@ADMINURI@/doaddplayers.json" method="post" id="addNewPlayers" onsubmit="return(addNewPlayers(this));">
									<fieldset>
										<div class="input">
											<i class="fa fa-fw fa-users"></i>
											<textarea name="players" placeholder="Space-separated participant e-mail addresses..."></textarea>
										</div>
										<div class="input input-submit">
											<i class="fa fa-fw fa-check"></i>
											<input id="addNewPlayersSubmit" type="submit" value="Save" />
										</div>
									</fieldset>
									<input type="hidden" id="autoadd4" name="autoadd" value="0" />
									<input type="hidden" id="autoaddpreserve2" name="autoaddpreserve" value="0" />
								</form>
							</section>
							<section class="advanced" id="players-captive">
								<div>
									<i class="fa fa-fw fa-chevron-circle-down"></i>
									<a href="#" onclick="document.getElementById('players-captive').className='advanced showadv'; return false;">
										Captive participant configuration
									</a>
								</div>
								<p>
									<i class="fa fa-fw fa-chevron-circle-up"></i>
									<a href="#" onclick="document.getElementById('players-captive').className='advanced'; return false;">
										Captive participant configuration
									</a>
								</p>
								<p>
									If you set the <q>Allow Captive Participants</q> toggle, then participants may add themselves.
									Captive participants will not be e-mailed when the experiment is started, nor will they be remembered
									when the experiment is wiped.
									If checked, <q>E-mail round advancement</q> will mail currently-playing non-captive participants a
									note whenever the round advances.
								</p>
								<form action="@ADMINURI@/doaddplayers.json" method="post" id="addNewPlayers2" onsubmit="return(addNewPlayers2(this));">
									<fieldset>
										<div class="input input-check">
											<i onclick="toggler('autoadd', 'autoaddToggle');" id="autoaddToggle" class="fa fa-fw fa-toggle-off"></i>
											<span onclick="toggler('autoadd', 'autoaddToggle');">Allow captive participants</span>
										</div>
										<div>
											<div class="input input-check">
												<i onclick="toggler('autoaddpreserve', 'autoaddTogglePreserve');" id="autoaddTogglePreserve" class="fa fa-fw fa-toggle-off"></i>
												<span onclick="toggler('autoaddpreserve', 'autoaddTogglePreserve');">Preserve modes after startup</span>
											</div>
										</div>
										<div class="input input-submit">
											<i class="fa fa-fw fa-check"></i>
											<input id="addNewPlayersSubmit2" type="submit" value="Save" />
										</div>
										<input type="hidden" id="autoadd" name="autoadd" value="0" />
										<input type="hidden" id="autoaddpreserve" name="autoaddpreserve" value="0" />
									</fieldset>
								</form>
							</section>
							<section class="advanced" id="players-mturk">
								<div>
									<i class="fa fa-fw fa-chevron-circle-down"></i>
									<a href="#" onclick="document.getElementById('players-mturk').className='advanced showadv'; return false;">
										Mechanical Turk configuration
									</a>
								</div>
								<p>
									<i class="fa fa-fw fa-chevron-circle-up"></i>
									<a href="#" onclick="document.getElementById('players-mturk').className='advanced'; return false;">
										Mechanical Turk configuration
									</a>
								</p>
								<form action="@ADMINURI@/dosetmturk.json" method="post" id="setmturk" onsubmit="return(setMturk(this));">
									<div class="noshow err setmturkerr500">
										<div class="warning">
											<div>
												<div><i class="fa fa-exclamation-circle"></i></div>
												<div>
													Uh-oh... a system error occurred.
												</div>
											</div>
										</div>
									</div>
									<div class="noshow err setmturkerr400">
										<div class="warning">
											<div>
												<div><i class="fa fa-exclamation-circle"></i></div>
												<div>
													Invalid parameters.
													Try again.
												</div>
											</div>
										</div>
									</div>
									<p>
										Enter your AWS access key <i class="fa fa-amazon"></i>, secret
										key <i class="fa fa-lock"></i>, number of workers <i class="fa
											fa-group"></i> (minimum of 1), and a meaningful
										experiment name <i class="fa fa-pencil-square-o"></i>.
										<strong>Note</strong>: your secret key will be stored as-is in
										the database, but never sent out and redacted on back-up.
									</p>
									<fieldset>
										<div class="input">
											<i class="fa fa-fw fa-amazon"></i>
											<input class="expr-aws-accesskey" required="required" 
												type="text" name="awsaccesskey" placeholder="AWS Access Key ID" />
										</div>
										<div class="input">
											<i class="fa fa-fw fa-lock"></i>
											<input required="required" type="text" name="awssecretkey" placeholder="AWS Secret Access Key" />
										</div>
										<div class="input">
											<i class="fa fa-fw fa-group"></i>
											<input class="expr-aws-workers" required="required" 
												type="number" name="workers" value="2" min="1" />
										</div>
										<div class="input">
											<i class="fa fa-fw fa-pencil-square-o"></i>
											<input required="required" class="expr-aws-name" type="text" 
												name="awsname" placeholder="Gamelab Experiment" />
										</div>
									</fieldset>
									<p>
										Next, provide an optional <i class="fa fa-pencil-square"></i> description and
										optional <i class="fa fa-ellipsis-h"></i> keywords.
										(You do want workers, yes?  Be descriptive!)
										Lastly, note whether you're running in sandbox or <q>real</q>
										mode.
										<strong>Always</strong> test in sandbox mode first!
									</p>
									<fieldset>
										<div class="input">
											<i class="fa fa-fw fa-pencil-square"></i>
											<textarea class="expr-aws-desc" name="awsdesc" placeholder="Experiment description"></textarea>
										</div>
										<div class="input">
											<i class="fa fa-fw fa-ellipsis-h"></i>
											<textarea class="expr-aws-keys" name="awskeywords" placeholder="Comma-separated keywords"></textarea>
										</div>
										<input type="checkbox" class="intoggler expr-aws-sandbox" 
											checked="checked" id="sandbox" name="sandbox" value="1" />
										<div>
											<label for="sandbox" class="intoggler-on input input-check">
												<i class="fa fa-fw fa-toggle-on"></i>
												<span>Sandbox Mode: enabled</span>
											</label>
											<label for="sandbox" class="intoggler-off input input-check">
												<i class="fa fa-fw fa-toggle-off"></i>
												<span>Sandbox Mode: disabled</span>
											</label>
										</div>
									</fieldset>
									<p>
										Set <i class="fa fa-exchange"></i> to the conversion rate from points to USD and
										<i class="fa fa-money"></i> to the reward (minimum clamped to 0.01) for workers.
									</p>
									<fieldset>
										<div class="input">
											<i class="fa fa-fw fa-exchange"></i>
											<input required="required" class="expr-aws-convert" type="number" 
												name="conversion" step="any" min="0.0" value="1.0" />
										</div>
										<div class="input">
											<i class="fa fa-fw fa-money"></i>
											<input required="required" class="expr-aws-reward" type="number" 
												name="awsreward" step="0.01" min="0.01" value="1.0" />
										</div>
									</fieldset>
									<p>
										Worker requirements: set <i class="fa fa-globe"></i> to be <a
											href="http://www.iso.org/iso/country_codes/iso_3166_code_lists.htm">ISO
											3166</a> country code (or blank for no restriction); <i
											class="fa fa-check"></i> to be the minimum number of approved
										HITs, with -1 meaning no restriction; and <i class="fa fa-percent"></i>
										to be the percent of approved assignments, with -1 being no restriction.
									</p>
									<fieldset>
										<div class="input">
											<i class="fa fa-fw fa-globe"></i>
											<input type="text" class="expr-aws-locale" name="workerlocale" 
												placeholder="Worker locale" />
										</div>
										<div class="input">
											<i class="fa fa-fw fa-check"></i>
											<input type="number" class="expr-aws-whit" name="workerhitapprv" 
												step="1" min="-1" value="-1" />
										</div>
										<div class="input">
											<i class="fa fa-fw fa-percent"></i>
											<input type="number" class="expr-aws-wpct" name="workerpctapprv" 
												step="1" max="100" min="-1" value="-1" />
										</div>
									</fieldset>
									<div class="buttons">
										<div>
											<div class="input input-submit" id="setmturkbtn">
												<i class="fa fa-fw fa-save"></i>
												<input type="submit" value="Save" />
											</div>
										</div>
										<div>
											<div class="input input-submit noshow" id="setmturkpbtn">
												<i class="fa fa-fw fa-save"></i>
												<input type="button" value="Saving..." />
											</div>
										</div>
										<div>
											<div class="input input-submit">
												<i class="fa fa-fw fa-refresh"></i>
												<input type="button" value="Unset" onclick="unsetMturk(); return false;" />
											</div>
										</div>
									</div>
								</form>
							</section>
							<p id="captiveGame">
								<strong>Note</strong>: you have opted for a captive experiment.
								To enter the captive portal, your participants will need to access <a
									href="@HTURI@/playerautoadd.html">@HTURI@/playerautoadd.html</a> in order to log in.
								They can do this <strong>at any time after now</strong>.
								Once you start the experiment, captive mode will be disabled, but you can enable it again if you
								wish to continue adding participants.
							</p>
						</section>
						<section id="startExprSection">
							<h3>
								3. Experiment parameters
							</h3>
							<p>
								Commit your experiment parameters and start here.
								Once you start your experiment, you can't reconfigure.
								Enter the <i class="fa fa-calendar"></i> start date and <i class="fa fa-clock-o"></i> time in
								GMT (clamps to now), the <i class="fa fa-gear"></i> number of rounds (minimum 1), <i class="fa
									fa-history"></i> minutes per round (minimum 1), and <i class="fa fa-pie-chart"></i> the percent of
								participants per player role who, upon playing, will cause the round to advance (0 not to do so).
							</p>
							<div class="error">
								<div class="noshow" id="startExprErrSystem">
									An unexpected error occurred.
								</div>
								<div class="noshow" id="startExprErrForm">
									Can't start: no games listed.
								</div>
								<div class="noshow" id="startExprErrState">
									Experiment already started!
								</div>
							</div>
							<form action="@ADMINURI@/dostartexpr.json" method="post" id="startExpr" onsubmit="return(startExpr(this));">
								<fieldset>
									<span class="inputheader">
										Current GMT date and time:
										<script>
											var now = new Date();
											document.write
												(now.getUTCFullYear() + '-' +
												 ('0' + (now.getUTCMonth()+1)).slice(-2) + '-' +
												 ('0' + now.getUTCDate()).slice(-2) + ', ' +
												 ('0' + now.getUTCHours()).slice(-2) + ':' +
												 ('0' + now.getUTCMinutes()).slice(-2));
										</script>
									</span>
									<div class="input">
										<i class="fa fa-fw fa-calendar"></i>
										<input required="required" id="date" type="date" name="date" placeholder="yyyy-mm-dd" />
									</div>
									<div class="input">
										<i class="fa fa-fw fa-clock-o"></i>
										<input required="required" id="time" type="time" name="time" placeholder="hh:mm GMT" />
									</div>
									<span>
										...or start in 
										<a href="#" onclick="exprStartTime(60 * 1000); return false;">one minute</a>, 
										<a href="#" onclick="exprStartTime(60 * 10 * 1000); return false;">ten minutes</a>, 
										<a href="#" onclick="exprStartTime(60 * 60 * 1000); return false;">one hour</a>, or
										<a href="#" onclick="exprStartTime(24 * 60 * 60 * 1000); return false;">one day</a> from now.
									</span>
									<div class="input">
										<i class="fa fa-fw fa-gear"></i>
										<input required="required" type="number" name="rounds" min="1" step="1" value="14" />
									</div>
									<div class="input">
										<i class="fa fa-fw fa-history"></i>
										<input required="required" type="number" name="minutes" max="1440" min="1" step="1" value="1440" />
									</div>
									<div class="input">
										<i class="fa fa-fw fa-pie-chart"></i>
										<input required="required" type="number" name="roundpct" max="100" min="0" step="1" value="100" />
									</div>
									<section class="advanced" id="advanced">
										<div>
											<i class="fa fa-chevron-circle-down"></i>
											<a href="#" onclick="document.getElementById('advanced').className='advanced showadv'; return false;">
												Show Advanced Options</a>.
										</div>
										<p>
											<i class="fa fa-chevron-circle-up"></i>
											<a href="#" onclick="document.getElementById('advanced').className='advanced'; return false;">
												Hide Advanced Options</a>.
										</p>
										<div>
											Enter the <i class="fa fa-link"></i> address for logging in, which is
											sent in participants' welcome email.
										</div>
										<div class="input">
											<i class="fa fa-fw fa-link"></i>
											<input required="required" id="loginURI" type="url" name="uri" />
										</div>
										<div>
											Set your <i class="fa fa-code"></i>
											instructions that will be shown to participants, which can consist of an uploaded HTML5 fragment.
										</div>
										<div class="input">
											<i class="fa fa-fw fa-code"></i>
											<div>
												<div>
													<input id="default-lottery" value="lottery" checked="checked" type="radio" name="instr" />
													<label for="default-lottery">
														<a href="@HTURI@/instructions-lottery.xml.txt">
															Lottery
														</a>
													</label>
												</div>
												<div>
													<input id="default-nolottery" value="nolottery" type="radio" name="instr" />
													<label for="default-nolottery">
														<a href="@HTURI@/instructions-nolottery.xml.txt">
															No Lottery
														</a>
													</label>
												</div>
												<div>
													<input id="default-mturk" value="mturk" type="radio" name="instr" />
													<label for="default-mturk">
														<a href="@HTURI@/instructions-mturk.xml.txt">
															Mechanical Turk
														</a>
													</label>
												</div>
												<div>
													<input value="custom" type="radio" name="instr" />
													<div>
														<input type="file" name="instrFile" />
													</div>
												</div>
											</div>
										</div>
										<div>
											If you're running a lottery (the default), change its amount here.
											You can use any currency: the following is a free-form text for the reward amount.
											If you leave it blank, no lottery will be computed.
										</div>
										<div class="input">
											<i class="fa fa-fw fa-money"></i>
											<input type="text" name="lottery" value="10 000 SEK" />
										</div>
										<div>
											Set 
											<i class="fa
												fa-gears"></i> rounds per participant (zero to be all rounds), <i
												class="fa fa-history fa-flip-horizontal"></i> minimum minutes for
											the percentage to take affect so as to allow participants to have a chance at
											playing, and <i class="fa fa-group"></i> maximum number of simulataneous
											participants per player role (0, the default, for no limit).
										</div>
										<div class="input">
											<i class="fa fa-fw fa-gears"></i>
											<input required="required" type="number" name="prounds" min="0" step="1" value="0" />
										</div>
										<div class="input">
											<i class="fa fa-fw fa-history fa-flip-horizontal"></i>
											<input required="required" type="number" name="roundmin" max="1440" min="0" step="1" value="0" />
										</div>
										<div class="input">
											<i class="fa fa-fw fa-group"></i>
											<input required="required" type="number" name="playermax" min="0" step="1" value="0" />
										</div>
										<div>
											Upload a <i class="fa fa-fw fa-file-code-o"></i> history of play (a JSON
											file as created with by exporting the history) to be prepended to the
											history shown to participants.
										</div>
										<div class="input">
											<i class="fa fa-fw fa-file-code-o"></i>
											<input type="file" name="historyfile" accept=".json" />
										</div>
										<div>
											Finally, set the toggle for <q>Show questionnaire</q> to require
											that participants submit answers to some verification questions before
											playing; or
											<q>E-mail round advancement</q> to e-mail non-captive participants when
											the round advances.
											If you don't want to transmit (or show) experiment history to participants,
											select <q>Do not show history</q>.
											Lastly, set <q>Do not shuffle games/actions</q> to present games and
											game bimatrices consistently across participants.
										</div>
										<div class="input input-check">
											<i onclick="toggler('question', 'questionToggle');" id="questionToggle" class="fa fa-fw fa-toggle-off"></i>
											<span onclick="toggler('question', 'questionToggle');">Show questionnaire</span>
										</div>
										<div class="input input-check">
											<i onclick="toggler('mailround', 'mailroundToggle');" id="mailroundToggle" class="fa fa-fw fa-toggle-off"></i>
											<span onclick="toggler('mailround', 'mailroundToggle');">E-mail round advancement</span>
										</div>
										<div class="input input-check">
											<i onclick="toggler('showhistory', 'showhistoryToggle');" id="showhistoryToggle" class="fa fa-fw fa-toggle-off"></i>
											<span onclick="toggler('showhistory', 'showhistoryToggle');">Do not show history</span>
										</div>
										<div class="input input-check">
											<i onclick="toggler('shuffle', 'shuffleToggle');" id="shuffleToggle" class="fa fa-fw fa-toggle-off"></i>
											<span onclick="toggler('shuffle', 'shuffleToggle');">Do not shuffle games/actions</span>
										</div>
										<div class="input input-check">
											<i onclick="toggler('relative', 'relativeToggle');" id="relativeToggle" class="fa fa-fw fa-toggle-off"></i>
											<span onclick="toggler('relative', 'relativeToggle');">Show relative round numbers</span>
										</div>
										<input type="hidden" id="question" name="question" value="0" />
										<input type="hidden" id="mailround" name="mailround" value="0" />
										<input type="hidden" id="showhistory" name="showhistory" value="0" />
										<input type="hidden" id="shuffle" name="shuffle" value="0" />
										<input type="hidden" id="relative" name="relative" value="0" />
									</section>
									<div class="input input-submit">
										<i class="fa fa-check"></i>
										<input id="startExprSubmit" type="submit" value="Start Experiment" gamelab-submit-pending="Starting..." />
									</div>
								</fieldset>
							</form>
						</section>
					</section>
				</article>
			</section>
		</section>
		<footer>
			&copy; 2014&#8211;2016
			<a href="http://www.kcons.eu"><i>k</i>-Consulting</a>
			<a href="http://www.kcons.eu/gamelab">gamelab @VERSION@</a>
			<a href="@HTURI@/privacy.html">Privacy</a>
		</footer>
	</body>
</html>
